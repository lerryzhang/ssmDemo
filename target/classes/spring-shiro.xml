<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

	<description>Shiro Configuration</description>


	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="customShiroCacheManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />

	</bean>

	<!-- 項目自定义的Realm认证登录 授权 -->
	<bean id="shiroDbRealm" class="com.cn.hnust.realm.MyRealm">

	</bean>
	<bean id="chainDefinitionSectionMetaSource"
		class="com.cn.hnust.shiro.filter.ChainDefinitionSectionMetaSource">
		<property name="filterChainDefinitions">
			<value>

				/user/login.shtml = anon	 
        </value>
		</property>
	</bean>
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="successUrl" value="/user/index.shtml" />
		<property name="loginUrl" value="/user/login.shtml" />
		<property name="unauthorizedUrl" value="/common/404.shtml" />
		<!--
			<property name="filters"> <map> <entry key="authc"
			value-ref="shiro"></entry> </map> </property>
		-->
		<!--
			<property name="filterChainDefinitions"> <value> /user/login.shtml =
			anon /user/index.shtml =roles[888888] /** = authc </value>
			</property>
		-->
		<property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" />
		<property name="filters">
			<map>
				<entry key="roles">
					<bean class="com.cn.hnust.shiro.filter.CustomRolesAuthorizationFilter" />
				</entry>

			</map>
		</property>

	</bean>


	<!-- <bean id="shiro" class="com.cat.shiro.ShiroFilter">

	</bean> -->
	<!-- 用户授权信息Cache -->




	<!-- 缓存管理器 -->
	<!--
		<bean id="cacheManager"
		class="org.calonlan.security.spring.SpringCacheManagerWrapper">
		<property name="cacheManager" ref="springCacheManager" /> </bean>
	-->

	<!-- 凭证匹配器 -->
	<!--
		<bean id="credentialsMatcher"
		class="org.calonlan.security.credentials.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="cacheManager" /> <property
		name="hashAlgorithmName" value="md5" /> <property
		name="hashIterations" value="2" /> <property
		name="storedCredentialsHexEncoded" value="true" /> </bean>
	-->


	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>

	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 30天 -->
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 会话监听器-->
	<bean id="customSessionListener"
		class="com.cn.hnust.shiro.listenter.CustomSessionListener">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
		
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<!-- 间隔多少时间检查，不配置是60分钟 -->
		<property name="interval" value="180000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>


	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="180000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionListeners">
	       <list>
	           <ref bean="customSessionListener"/>
	       </list>
	   </property>
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="customShiroSessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<bean id="customShiroSessionDAO"
		class="com.cn.hnust.shiro.session.manager.CustomShiroSessionDao">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<bean id="jedisShiroSessionRepository"
		class="com.cn.hnust.shiro.session.manager.JedisShiroSessionRepository">
		<property name="redisManager" ref="redisManager"></property>
	</bean>
	<bean id="redisManager" class="com.cn.hnust.shiro.session.manager.RedisManager">
		<property name="jedisPool" ref="jedisPool" />
	</bean>





	<bean id="jedisShiroCacheManager"
		class="com.cn.hnust.shiro.session.manager.JedisShiroCacheManager">
		<property name="redisManager" ref="redisManager"></property>
	</bean>

	<bean id="customShiroCacheManager"
		class="com.cn.hnust.shiro.session.manager.CustomShiroCacheManager">
		<property name="shrioCacheManager" ref="jedisShiroCacheManager"></property>
	</bean>


	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>



	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />



</beans>